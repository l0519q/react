{"version":3,"sources":["components/Header.js","components/Action.js","components/Option.js","components/Options.js","components/AddOption.js","components/Modal.js","components/App.js","index.js"],"names":["Header","props","className","title","subTitle","defaultProps","Action","onClick","handlePick","disabled","hasOptions","Option","count","option","handleRemoveOption","Options","handleRemoveAll","options","length","map","index","key","AddOption","handleFormSubmit","bind","state","error","undefined","e","preventDefault","target","value","trim","this","handleAddOption","setState","onSubmit","type","name","React","Component","ReactModal","setAppElement","Modal","isOpen","selectedOption","closeTimeoutMS","onRequestClose","handleClearSelectedOption","App","json","localStorage","getItem","JSON","parse","prevProps","prevState","stringify","setItem","console","log","filter","item","includes","concat","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89bb7574.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = props => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <h1 className=\"header__title\">{props.title}</h1>\r\n                {props.subTitle && <h2 className=\"header__subtitle\">{props.subTitle}</h2>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    title: '帮你决定'\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Action = props => {\r\n    return (\r\n        <div>\r\n            <button className=\"big-button\" onClick={props.handlePick} disabled={!props.hasOptions}>随机输出一个选项</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Action","import React from 'react'\r\n\r\nconst Option = props => {\r\n    return (\r\n        <div className=\"option\">\r\n            <p className=\"option__text\">{props.count}. {props.option}</p>\r\n            <button \r\n                className=\"button button--link\" \r\n                onClick={() => {\r\n                    props.handleRemoveOption(props.option);\r\n                }}>\r\n                remove\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Option","import React from 'react'\r\nimport Option from './Option'\r\n\r\nconst Options = props => {\r\n    return (\r\n        <div>\r\n            <div className=\"widget-header\">\r\n                <h3 className=\"widget-header__title\">你的选项</h3>\r\n                <button className=\"button button--link\" onClick={props.handleRemoveAll}>删除所有</button>\r\n            </div>\r\n            {props.options.length === 0 && <p className=\"widget__message\">请添加一个选项</p>}\r\n            {\r\n                props.options.map((option, index) => (\r\n                    <Option \r\n                        handleRemoveOption={props.handleRemoveOption} \r\n                        option={option} \r\n                        key={`option_${index}`}\r\n                        count={index + 1}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options","import React from 'react'\r\n\r\nclass AddOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.state = {\r\n            error: undefined\r\n        }\r\n    }\r\n    handleFormSubmit(e) {\r\n        e.preventDefault();\r\n        const option = e.target.option.value.trim();\r\n        const error = this.props.handleAddOption(option);\r\n        this.setState(() => ({\r\n                error\r\n            }))\r\n        if (!error) {\r\n            e.target.option.value = '';\r\n        }      \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.error && <p className=\"add-option-error\">{this.state.error}</p>}\r\n                <form className=\"add-option\" onSubmit={this.handleFormSubmit}>\r\n                    <input className=\"add-option__input\" type=\"text\" name=\"option\"/>\r\n                    <button className=\"button\">添加选项</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddOption","import React from 'react'\r\nimport ReactModal from 'react-modal'\r\nReactModal.setAppElement('#root')\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <ReactModal \r\n            className=\"modal\"\r\n            isOpen={!!props.selectedOption} \r\n            closeTimeoutMS={200} \r\n            onRequestClose={props.handleClearSelectedOption}\r\n        >\r\n            <h3 className=\"modal__title\">选中的选项</h3>\r\n            <p className=\"modal__body\">{props.selectedOption}</p>\r\n            <button className=\"button\" onClick={props.handleClearSelectedOption}>好的</button>\r\n        </ReactModal>\r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport Header from './Header'\r\nimport Action from './Action'\r\nimport Options from './Options'\r\nimport AddOption from './AddOption'\r\nimport Modal from './Modal'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRemoveOption = this.handleRemoveOption.bind(this);\r\n        this.handleAddOption = this.handleAddOption.bind(this);\r\n        this.handleRemoveAll = this.handleRemoveAll.bind(this);\r\n        this.handlePick = this.handlePick.bind(this);\r\n        this.handleClearSelectedOption = this.handleClearSelectedOption.bind(this);\r\n        this.state = {\r\n            options: props.options,\r\n            selectedOption: undefined\r\n        }\r\n    }\r\n    // 加载组件时调用\r\n    componentDidMount() {\r\n        try {\r\n            const json = localStorage.getItem('options');\r\n            const options = JSON.parse(json);\r\n            if (options) {\r\n                this.setState(() => ({\r\n                    options\r\n                }))\r\n            }\r\n        } catch (e) {\r\n            // 什么都不做\r\n        }\r\n    }\r\n    // 数据更新时调用\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.options.length !== prevState.options.length) {\r\n            const json = JSON.stringify(this.state.options);\r\n            localStorage.setItem('options', json);\r\n        }\r\n    }\r\n    // 卸载组件时调用\r\n    componentWillUnmount() {\r\n        console.log('卸载')\r\n    }\r\n    handleRemoveOption(option) {\r\n        this.setState(prevState => ({\r\n            options: prevState.options.filter(item => item !== option)\r\n        }))\r\n    }\r\n    handleAddOption(option) {\r\n        if (!option) {\r\n            return '选项不能为空';\r\n        } else if (this.state.options.includes(option)) {\r\n            return '不能输入重复的选项';\r\n        } else {\r\n            this.setState(prevState => ({\r\n                    options: prevState.options.concat(option)\r\n                }))\r\n        }\r\n    }\r\n    handleRemoveAll() {\r\n        this.setState(() => ({\r\n                options: []\r\n            }))\r\n    }\r\n    handlePick() {\r\n        const index = Math.floor(Math.random() * this.state.options.length);\r\n        const option = this.state.options[index];\r\n        this.setState(() => ({\r\n            selectedOption: option\r\n        }))\r\n    }\r\n    handleClearSelectedOption() {\r\n        this.setState(() => ({\r\n            selectedOption: undefined\r\n        }))\r\n    }\r\n    render() {\r\n        const subTitle = '把你的命运交给电脑吧';\r\n        return (\r\n            <div>\r\n                <Header subTitle={subTitle}/>\r\n                <div className=\"container\">\r\n                    <Action hasOptions={this.state.options.length > 0} handlePick={this.handlePick}/>\r\n                    <div className=\"widget\">\r\n                        <Options \r\n                            options={this.state.options} \r\n                            handleRemoveAll={this.handleRemoveAll} \r\n                            handleRemoveOption={this.handleRemoveOption}\r\n                        />\r\n                        <AddOption handleAddOption={this.handleAddOption}/>\r\n                    </div>\r\n                </div>\r\n                <Modal handleClearSelectedOption={this.handleClearSelectedOption} selectedOption={this.state.selectedOption}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nApp.defaultProps = {\r\n    options: []\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport './styles/styles.scss'\r\nimport 'normalize.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}